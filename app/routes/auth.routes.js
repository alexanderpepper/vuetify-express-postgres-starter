const jwt = require('../middleware/jwt')
const userValidator = require('../middleware/user-validator')
const controller = require('../controllers/auth.controller')
const genericController = require('../controllers/generic.controller')

module.exports = app => {
  app.use((req, res, next) => {
    res.header('Access-Control-Allow-Headers', 'Authorization, Origin, Content-Type, Accept')
    next()
  })
  app.post('/api/sign-up', [userValidator.validateSignUp], controller.signUp)
  app.post('/api/sign-up/validate/credentials', [userValidator.validateSignUpCredentials], genericController.validationSuccessResponse)
  app.post('/api/sign-up/validate/password', [userValidator.validateSignUpPassword], genericController.validationSuccessResponse)
  app.post('/api/sign-up/validate/security-questions', [userValidator.validateSignUpSecurityQuestions], genericController.validationSuccessResponse)
  app.post('/api/change-password', [jwt.verifyToken, userValidator.validatePasswordChange], controller.changePassword)
  app.post('/api/sign-in', [userValidator.validateSignIn], controller.signIn)
  app.post('/api/get-security-questions', [userValidator.validateGetSecurityQuestions], controller.getSecurityQuestions)
  app.post('/api/activate', [userValidator.validateActivation], controller.activate)
  app.post('/api/send-activation-link',[userValidator.validateSendActivationLink], controller.sendActivationLink)
  app.post('/api/send-password-reset-link', [userValidator.validateSendPasswordResetLink], controller.sendPasswordResetLink)
  app.post('/api/verify-security-questions', [userValidator.validateSignUpSecurityQuestions], controller.verifySecurityQuestions)
  app.post('/api/get-send-options', [userValidator.validateGetSendOptions], controller.getSendOptions)
  app.post('/api/send-username', [userValidator.validateSendUsername], controller.sendUsername)
  app.post('/api/set-password', [userValidator.validateSetPassword], controller.resetPassword)
}
